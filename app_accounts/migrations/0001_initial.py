# Generated by Django 4.0.1 on 2022-01-26 21:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserMaster',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=30)),
                ('userType', models.CharField(max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('cid', models.AutoField(primary_key=True, serialize=False)),
                ('firstName', models.CharField(max_length=20)),
                ('lastName', models.CharField(max_length=20)),
                ('contact', models.CharField(max_length=10)),
                ('birthDate', models.DateField(null=True)),
                ('gender', models.CharField(max_length=6)),
                ('bloodGroup', models.CharField(max_length=3)),
                ('address', models.CharField(max_length=200)),
                ('city', models.CharField(max_length=10)),
                ('state', models.CharField(max_length=10)),
                ('orderTime', models.DateTimeField(auto_now_add=True)),
                ('pincode', models.IntegerField()),
                ('vehicleModel', models.CharField(max_length=15)),
                ('vehicleNumber', models.CharField(max_length=10)),
                ('UID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PendingOrders',
            fields=[
                ('oid', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('firstName', models.CharField(max_length=20)),
                ('lastName', models.CharField(max_length=20)),
                ('time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subscribers',
            fields=[
                ('sid', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('pid', models.AutoField(primary_key=True, serialize=False)),
                ('modelNumber', models.CharField(max_length=10, unique=True)),
                ('allocationTime', models.DateTimeField(default=None)),
                ('productTime', models.DateTimeField(auto_now_add=True)),
                ('cid', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='app_accounts.customer')),
            ],
        ),
        migrations.CreateModel(
            name='ECC',
            fields=[
                ('eid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=50)),
                ('contact', models.CharField(max_length=10)),
                ('uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('aid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('contact', models.CharField(max_length=10)),
                ('uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AccidentRecords',
            fields=[
                ('rid', models.AutoField(primary_key=True, serialize=False)),
                ('latitude', models.CharField(max_length=20)),
                ('longitude', models.CharField(max_length=20)),
                ('state', models.CharField(max_length=30)),
                ('city', models.CharField(max_length=30)),
                ('area', models.CharField(max_length=80)),
                ('pincode', models.CharField(max_length=8)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('replyTime', models.DateTimeField(auto_now_add=True)),
                ('replyStatus', models.BooleanField()),
                ('cid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_accounts.customer')),
                ('eid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_accounts.ecc')),
            ],
        ),
    ]
